##  Example QuDi configuration file.
##
##
##
## IMPORTANT: 	The format of every 'module.Class' line has changed on 28.6.2015.
##				The class name now needs to be explicitly given here in the config.
##				the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    # Devices are defined in another config file:
    #hardware: readConfigFile('devices.cfg')
    remoteport: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:
    dummykrowave:
        module.Class: 'microwave.mw_source_dummy.MicrowaveDummy'
        gpib_address: 'dummy'
        gpib_timeout: 20

    mykrowave:
        module.Class: 'microwave.mw_source_smiq.MicrowaveSmiq'
        gpib_address: 'GPIB0::28::INSTR'
        gpib_timeout: 60

    mykrowave2:
        module.Class: 'microwave.mw_source_gigatronics.MicrowaveGigatronics'
        gpib_address: 'GPIB0::6::INSTR'
        gpib_timeout: 60

    mydummyfastcounter:
        module.Class: 'fast_counter_dummy.FastCounterDummy'

    pulsegenerator:
        module.Class: 'pulser_ummy.PulserDummy'


    specswitch:
        module.Class: 'switches.flipmirror.FlipMirror'
        interface: 'ASRL3'

    switch2:
        module.Class: 'switches.flipmirror.FlipMirror'
        interface: 'ASRL5'

    fpgaswitch:
        module.Class: 'FPGA_switch.32bit_version.Switch.Fpgaswitch'

    mynicard:
        module.Class: 'ni_card.NICard'
        clock_channel: '/Dev1/Ctr0'
        counter_channel: '/Dev1/Ctr1'
        scanner_clock_channel: '/Dev1/Ctr2'
        scanner_counter_channel: '/Dev1/Ctr3'
        photon_source: '/Dev1/PFI8'
        photon_source2: '/Dev1/PFI9'
        gate_in_channel: '/Dev1/PFI9'
        counting_edge_rising: True
        odmr_trigger_channel: '/Dev1/PFI15'
        scanner_x_ao: '/Dev1/AO0'
        scanner_y_ao: '/Dev1/AO1'
        scanner_z_ao: '/Dev1/AO2'
        scanner_a_ao: '/Dev1/AO3'
        clock_frequency: 100
        scanner_clock_frequency: 100
        x_range:
        - 0e-6
        - 200e-6
        y_range:
        - 0e-6
        - 200e-6
        z_range:
        - -100e-6
        - 100e-6
        a_range:
        - -10
        - 10
        voltage_range:
        - -10
        - 10
        samples_number: 10

    remotewavemeter:
        module.Class: 'does_not_matter.DoesNotMatter'
        remote: 'rpyc://134.60.83.201:12345/highfinesse'

    remotespectrometer:
        module.Class: 'does_not_matter.DoesNotMatter'
        remote: 'rpyc://134.60.83.161:16666/winspec'

    hwp_motor:
        module.Class: 'motor.aptmotor.APTOneAxisStage'
        motor_type_serial_label:
        -
          - HWTYPE_TDC001
          - 83833415
          - phi

logic:
    qdplot:
        module.Class: 'qdplot_logic.QdplotLogic'
        connect:
            savelogic: 'save'

    spectrumscannerinterfuse:
        module.Class: 'interfuse.confocal_scanner_spectrometer_interfuse.SpectrometerScannerInterfuse'
        connect:
            fitlogic: 'fit'
            confocalscanner1: 'mynicard'
            spectrometer1: 'remotespectrometer'

    sequencegenerator:
        module.Class: 'sequence_generator_logic.SequenceGeneratorLogic'

    pulseextraction:
        module.Class: 'pulse_extraction_logic.PulseExtractionLogic'
        connect:
            fastcounter: 'mydummyfastcounter'

    pulseanalysis:
        module.Class: 'pulse_analysis_logic.PulseAnalysisLogic'
        connect:
            fastcounter: 'mydummyfastcounter'
            pulseextractionlogic: 'pulseextraction'
            sequencegenerator: 'sequencegenerator'
            pulsegenerator: 'pulsegenerator'

    counter:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'mynicard'
            savelogic: 'save'

    wavemeterlogger:
        module.Class: 'wavemeter_logger_logic.WavemeterLoggerLogic'
        logic_acquisition_timing: 20
        logic_update_timing: 100
        connect:
            wavemeter1: 'remotewavemeter'
            savelogic: 'save'
            counterlogic: 'counter'
            fitlogic: 'fit'

    laserscanner:
        module.Class: 'laser_scanner_logic.LaserScannerLogic'
        connect:
            confocalscanner1: 'mynicard'
            savelogic: 'save'

    switchlogic:
        module.Class: 'switch_logic.SwitchLogic'
        connect:
            switch2: 'switch2'
            switch1: 'specswitch'

    scanner_tilt_interfuse:
        module.Class: 'interfuse.scanner_tilt_interfuse.ScannerTiltInterfuse'
        connect:
            confocalscanner1: 'mynicard'

    scanner:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            savelogic: 'save'

    spectrumscanner:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'spectrumscannerinterfuse'
            savelogic: 'save'

    optimizer:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            fitlogic: 'fit'

    poimanager:
        module.Class: 'poi_manager_logic.PoiManagerLogic'
        connect:
            scannerlogic: 'scanner'
            optimizer1: 'optimizer'
            savelogic: 'save'

    odmr:
        module.Class: 'odmr_logic.ODMRLogic'
        connect:
            odmrcounter: 'mynicard'
            fitlogic: 'fit'
            microwave1: 'dummykrowave'
            savelogic: 'save'
            taskrunner: 'tasklogic'
        scanmode: 'LIST'

    odmr2:
        module.Class: 'odmr_logic.ODMRLogic'
        connect:
            odmrcounter: 'mynicard'
            fitlogic: 'fit'
            microwave1: 'mykrowave2'
            savelogic: 'save'
            taskrunner: 'tasklogic'
        scanmode: 'LIST'

    fit:
        module.Class: 'fit_logic.FitLogic'

    save:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: '/$HOME/'

    spectrum:
        module.Class: 'spectrum.SpectrumLogic'
        connect:
            spectrometer: 'remotespectrometer'
            savelogic: 'save'
            odmrlogic1: 'odmr'

    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
            scannerLocationRefocus:
                module: 'refocus'
                pausetasks:
                  - scan
                  - odmr
                needsmodules:
                    optimizer: 'optimizer'

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

    countergui:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counter'

    confocalgui:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scanner'
            savelogic: 'save'
            optimizerlogic1: 'optimizer'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02

    confocalspecscangui:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'spectrumscanner'
            savelogic: 'save'
            optimizerlogic1: 'optimizer'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02

    wavemeterloggui:
        module.Class: 'wavemeterlogger.wavemeterloggui.WavemeterLogGui'
        connect:
            wavemeterloggerlogic1: 'wavemeterlogger'
            savelogic: 'save'

    switchgui:
        module.Class: 'switcher.switchgui.SwitchGui'
        connect:
            switchlogic: 'switchlogic'

    poimanagergui:
        module.Class: 'poimanager.poimangui.PoiManagerGui'
        connect:
            poimanagerlogic1: 'poimanager'
            confocallogic1: 'scanner'

    qdplotter:
        module.Class: 'qdplotter.qdplottergui.QdplotterGui'
        connect:
            qdplotlogic1: 'qdplot'

    odmrgui:
        module.Class: 'odmr.odmrgui.ODMRGui'
        connect:
            odmrlogic1: 'odmr'
            savelogic: 'save'

    odmrgui2:
        module.Class: 'odmr.odmrgui.ODMRGui'
        connect:
            odmrlogic1: 'odmr2'
            savelogic: 'save'

    pulsedmeasurement:
        module.Class: 'pulsed.pulsed_measurement_gui.PulsedMeasurementGui'
        connect:
            pulseanalysislogic: 'pulseanalysis'
            sequencegeneratorlogic: 'sequencegenerator'

    spectrometergui:
        module.Class: 'spectrometer.spectrometergui.SpectrometerGui'
        connect:
            spectrumlogic1: 'spectrum'

    laserscangui:
        module.Class: 'laserscanner.laserscannergui.VoltScanGui'
        connect:
            voltagescannerlogic1: 'laserscanner'
            savelogic: 'save'